@model CurrencyExchange.Models.CalculatorModel

@{ ViewBag.Title = "Index"; }

<h2>ვალუტის კონვერტაცია</h2>


@Html.AntiForgeryToken()
@using (Html.BeginForm("Index", "Calculator", FormMethod.Post))
{
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ReceivedCur, "მისაღები ვალუტა", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReceivedCur, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.ReceivedCur, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReturnedCur, "გასაცემი ვალუტა", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReturnedCur, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.ReturnedCur, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReturnedAmount, "გასაყიდი თანხის რაოდენობა", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReturnedAmount, new { htmlAttributes = new { @class = "form-control", @Value = Model.ReturnedAmount} })
            @Html.ValidationMessageFor(model => model.ReturnedAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReceivedAmount, "მისაღები თანხის ოდენობა", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReceivedAmount, new { htmlAttributes = new { @class = "form-control", @Value = Model.ReceivedAmount} })
            @Html.ValidationMessageFor(model => model.ReceivedAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, "კომენტარი", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" value="Convert" id="btnCalc" class="btn btn-default">კონვერტაცია</button>
        </div>
    </div>
</div>}

@if (ViewBag.Message != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>
}


